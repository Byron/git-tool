name: Build Release
on:
  release:
    types: [published]
jobs:
    
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [windows, linux, darwin]
        arch: [amd64]
        include:
          - arch: amd64
            rust_arch: x86_64
          - os: windows
            extension: ".exe"
            rust_target_suffix: pc-windows-msvc
          - os: linux
            rust_target_suffix: unknown-linux-musl
          - os: darwin
            rust_target_suffix: apple-darwin

    steps:
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libdbus-1-3 libdbus-1-dev
      if: matrix.os == "linux"
      
    - name: Get Rust Stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: "${{ matrix.rust_arch }}-${{ matrix.rust_target_suffix }}"
        override: true

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Set Package Version
      uses: ciiiii/toml-editor@1.0.0
      with:
        file: Cargo.toml
        key: package.version
        value: ${{ github.event.release.tag_name }}

    - name: Build Release
      uses: actions-rs/cargo@v1.0.1
      with:
        command: build
        args: --release

    - name: Build
      run: go build -o bin/git-tool-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }} -ldflags "-X main.version=${{ github.event.release.tag_name }}" ./cmd/git-tool/main.go
      shell: pwsh
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
        
    - name: Create Sentry Release
      uses: tclindner/sentry-releases-action@v1.0.0
      env:
        SENTRY_ORG: sierra-softworks
        SENTRY_PROJECT: git-tool
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      with:
        environment: git-tool
        tagName: git-tool@${{ github.event.release.tag_name }}

    - name: Upload to Release
      uses: Shopify/upload-to-release@1.0.0
      with:
        name: "git-tool-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.extension }}"
        path: "target/release/git-tool${{ matrix.extension }}"
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        content-type: application/octet-stream
